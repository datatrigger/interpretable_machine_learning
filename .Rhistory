geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_minimal()
# (Ab)Normality
ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_minimal()
# Homoscedasticity
ggplot(
tibble(index = seq(1, nrow(df)), rstudent = rstudent(lm_full))
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_minimal()
# (Ab)Normality
ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
# Homoscedasticity
ggplot(
tibble(index = seq(1, nrow(df)), rstudent = rstudent(lm_full))
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
ggplot(
tibble(index = seq(1, nrow(df)), rstudent = rstudent(lm_full))
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# (Ab)Normality
ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5)) +
ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
ggplot(
tibble(index = seq(1, nrow(df)), rstudent = rstudent(lm_full))
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
tibble(rstudent = rstudent(lm_full)/nrow(df)) %>%
filter(rstudent > 2) %>%
sum()
tibble(rstudent = rstudent(lm_full)/nrow(df)) %>%
filter(rstudent > 2) %>%
summarize(sum=sum(rstudent))
tibble(rstudent = rstudent(lm_full)/nrow(df))
# Percentage of studentized residuals greater than 2
sum(rstudent(lm_full)>2)
# Percentage of studentized residuals greater than 2
sum(rstudent(lm_full)>2)/nrow(df)
studentized_residuals <- rstudent(lm_full)
ggplot(
tibble(index = seq(1, nrow(df)), rstudent = studentized_residuals)
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/nrow(studentized_resid
)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/nrow(studentized_residuals)
studentized_residuals
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the two competiting linear models (with/without the BMI)
lm_no_bmi <- lm(charges~.-bmi, data=df)
lm_full <- lm(charges~., data=df)
# Compute the t-statistic of BMI in the full model
summary(lm_full)
# Or compute the F-statistic of the nested models
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
print(qqplot)
print(studentized_residuals)
print(studentized_residuals)
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=index, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals) %>% arrange(charges)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the two competiting linear models (with/without the BMI)
lm_no_bmi <- lm(charges~.-bmi, data=df)
lm_full <- lm(charges~., data=df)
# Compute the t-statistic of BMI in the full model
summary(lm_full)
# Or compute the F-statistic of the nested models
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Index") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
ggsave("qq_plot.png", qqplot, dpi = "retina")
ggsave("studentized_residuals.png", student_res_plot, dpi = "retina")
ggsave("plots_r/qq_plot.png", qqplot, dpi = "retina")
ggsave("plots_r/studentized_residuals.png", student_res_plot, dpi = "retina")
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Charges") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
ggsave("plots_r/qq_plot.png", qqplot, dpi = "retina")
ggsave("plots_r/studentized_residuals.png", student_res_plot, dpi = "retina")
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the two competiting linear models (with/without the BMI)
lm_no_bmi <- lm(charges~.-bmi, data=df)
lm_full <- lm(charges~., data=df)
# Compute the t-statistic of BMI in the full model
summary(lm_full)
# Or compute the F-statistic of the nested models
anova(lm_no_bmi, lm_full)
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the t-statistic of BMI in the full model
lm_full <- lm(charges~., data=df)
summary(lm_full)
# Or compute the F-statistic of the nested models
lm_no_bmi <- lm(charges~.-bmi, data=df)
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Charges") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
ggsave("plots_r/qq_plot.png", qqplot, dpi = "retina")
ggsave("plots_r/studentized_residuals.png", student_res_plot, dpi = "retina")
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the t-statistic of BMI in the full model
lm_full <- lm(charges~., data=df)
summary(lm_full)
# Or compute the F-statistic of the nested models
lm_no_bmi <- lm(charges~.-bmi, data=df)
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Charges") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
ggsave("plots_r/qq_plot.png", qqplot, dpi = "retina")
ggsave("plots_r/studentized_residuals.png", student_res_plot, dpi = "retina")
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
summary(lm_full)
anova(lm_no_bmi, lm_full)
# Packages
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the t-statistic of BMI in the full model
lm_full <- lm(charges~., data=df)
summary(lm_full)
# Or compute the F-statistic of the nested models
lm_no_bmi <- lm(charges~.-bmi, data=df)
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Charges") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(student_res_plot, qqplot, nrow=1)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
df
# Packages
library(here)
library(readr)
library(tibble)
library(dplyr)
library(ggplot2)
# Import the training set
df <- read_csv(here('data_r/df_train.csv'))
# Compute the t-statistic of BMI in the full model
lm_full <- lm(charges~., data=df)
summary(lm_full)
# Or compute the F-statistic of the nested models
lm_no_bmi <- lm(charges~.-bmi, data=df)
anova(lm_no_bmi, lm_full)
# The nullity test for the BMI's coefficient are equivalent: t² = F (10.381² = 107.77)
# (Ab)Normality
qqplot <- ggplot(
tibble(residuals = residuals(lm_full)),
aes(sample = residuals)
) +
stat_qq() +
stat_qq_line() +
xlab("Normal quantiles") +
ylab("Residual quantiles") +
ggtitle("Q-Q plot of the residuals for the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# Homoscedasticity
studentized_residuals <- rstudent(lm_full)
student_res_plot <- ggplot(
data = df %>% select(charges) %>% mutate(rstudent=studentized_residuals)
) +
geom_point(aes(x=charges, y = rstudent), size = 1) +
geom_hline(yintercept=2, color = "red") +
geom_hline(yintercept=-2, color = "red") +
scale_y_continuous(breaks = seq(-5, 5), limits=c(-3, 5)) +
xlab("Charges") +
ylab("Studentized residuals") +
ggtitle("Studentized residuals of the full linear model") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(qqplot)
print(student_res_plot)
# Percentage of studentized residuals greater than 2
sum(studentized_residuals>2)/length(studentized_residuals)
